21. Merge Two Sorted Lists
Easy
17.5K
1.6K
Companies

You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 

Example 1:

Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Example 2:

Input: list1 = [], list2 = []
Output: []

Example 3:

Input: list1 = [], list2 = [0]
Output: [0]

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode curr1=list1;
        ListNode curr2=list2;
        if(list1==null && list2==null) return null;
        if(list1!=null && list2==null) return list1;
        if(list1==null && list2!=null) return list2;
        ListNode head=list1;
        if(list1.val>list2.val){
            head=list2;
        }
        ListNode prev=null;
        while(curr1!=null&&curr2!=null){
            if(curr1.val<=curr2.val){
                if(prev==null) prev=curr1;
                else {prev.next=curr1;
                    prev=prev.next;}
                curr1=curr1.next;
            }else{
                if(prev==null) prev=curr2;
                else {prev.next=curr2;
                prev=prev.next;
                }
                curr2=curr2.next;
            }
        }
        while(curr1!=null){
            prev.next=curr1;
            prev=prev.next;
            curr1=curr1.next;
        }
         while(curr2!=null){
            prev.next=curr2;
            prev=prev.next;
            curr2=curr2.next;
        }
        return head;
    }
}
