

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode curr1=l1;
        ListNode curr2=l2;
        return add(l1,l2,0);
    }
    public ListNode add(ListNode l1, ListNode l2,int carry){
        int sum=0;
        ListNode node = new ListNode();
        
        if(l1==null && l2==null && carry>0){
            sum=carry;
            carry=sum/10;
            sum=sum%10;
            node.val=sum;
            node.next=add(null,null,carry);
            return node;

        }
        else if(l1==null && l2==null){
            return null;
        }
        else if((l1==null && l2!=null)){
            sum=l2.val+carry;
           carry=sum/10;
           sum=sum%10;
           node.val=sum;
           node.next=add(null,l2.next,carry);
           return node;
        }
        else if((l2==null && l1!=null)){
            sum=l1.val+carry;
           carry=sum/10;
           sum=sum%10;
           node.val=sum;
           node.next=add(l1.next,null,carry);
           return node;
        }
        else{
           sum=l1.val+l2.val+carry;
           carry=sum/10;
           sum=sum%10;
           node.val=sum;
           node.next=add(l1.next,l2.next,carry);
           return node;
        }
    }
}
