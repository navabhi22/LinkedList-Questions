234. Palindrome Linked List
Easy
13.1K
727
Companies

Given the head of a singly linked list, return true if it is a
palindrome
or false otherwise.

 

Example 1:

Input: head = [1,2,2,1]
Output: true

Example 2:

Input: head = [1,2]
Output: false

 

Constraints:

    The number of nodes in the list is in the range [1, 105].
    0 <= Node.val <= 9

 
Follow up: Could you do it in O(n) time and O(1) space?

class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode curr= head;
        ListNode fast = head;
        ListNode prev = null;
        while(fast!=null && fast.next!=null){
            fast=fast.next.next;
            ListNode temp = curr.next;
            curr.next = prev;
            prev =curr;
            curr=temp;
        }
        if(fast==null){
            while(prev!=null && curr!=null){
                if(prev.val!=curr.val) return false;
                prev=prev.next;
                curr=curr.next;
            }
        }else{
            curr=curr.next;
            while(prev!=null && curr!=null){
                if(prev.val!=curr.val) return false;
                prev=prev.next;
                curr=curr.next;
            }

        }
        return true;

    }
}
