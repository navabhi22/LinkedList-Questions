61. Rotate List
Medium
7.4K
1.3K
Companies

Given the head of a linked list, rotate the list to the right by k places.

 

Example 1:

Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]

Example 2:

Input: head = [0,1,2], k = 4
Output: [2,0,1]

 

Constraints:

    The number of nodes in the list is in the range [0, 500].
    -100 <= Node.val <= 100
    0 <= k <= 2 * 109

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        ListNode curr=head;
        if(head==null) return head;
        int size=1;
        while(curr.next!=null){
            size++;
            curr=curr.next;
        }
        ListNode tail=curr;
        curr=head;
        k=k%size;
        int m=size-k-1;
        for(int i=0;i<m;i++){
            curr=curr.next;
        }
        tail.next=head;
        head=curr.next;
        curr.next=null;
        return head;
    }
}
