92. Reverse Linked List II
Medium
8.7K
388
Companies

Given the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list.

 

Example 1:

Input: head = [1,2,3,4,5], left = 2, right = 4
Output: [1,4,3,2,5]

Example 2:

Input: head = [5], left = 1, right = 1
Output: [5]

 

Constraints:

    The number of nodes in the list is n.
    1 <= n <= 500
    -500 <= Node.val <= 500
    1 <= left <= right <= n

 
Follow up: Could you do it in one pass?
method-1
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        ListNode curr = head;
        ListNode prev = null;
        if(left==right) return head;
        int i=1;
        for(; i<left;i++){
            prev=curr;
            curr=curr.next;
        }
        ListNode t1 = prev;
        ListNode t2=curr;
        for(; i<=right && curr!=null;i++){
            ListNode temp = curr.next;
            curr.next=prev;
            prev=curr;
            curr=temp;
        }
        t2.next=curr;
        if(t1==null){
            return prev;
        }
        t1.next=prev;
        
        return head;
    }
}
